Appcelerator Titanium Mobile Web Module Project
===============================================

This is a skeleton Titanium Mobile Mobile Web module project.


MODULE NAMING
-------------

Choose a unique module id for your module.  This ID usually follows a namespace
convention using DNS notation.  For example, com.appcelerator.module.test.  This
ID can only be used once by all public modules in Titanium.


MODULE FORMAT
-------------

Mobile Web supports both AMD (asynchronous module definition) and CommonJS modules.
AMD modules are preferred because they allow dependency resolution, use existing
Mobile Web core library functions, extend the Titanium API, asynchronous loading,
precaching, and more.


GET STARTED
------------

1. Edit manifest with the appropriate details about your module.
2. Edit LICENSE to add your license details.
3. Place any assets (such as PNG files) that are required anywhere in the module folder.
4. Edit the timodule.xml and configure desired settings.
5. Code and build.


DOCUMENTATION FOR YOUR MODULE
-----------------------------

You should provide at least minimal documentation for your module in `documentation` folder using the Markdown syntax.

For more information on the Markdown syntax, refer to this documentation at:

<http://daringfireball.net/projects/markdown/>


TEST HARNESS EXAMPLE FOR YOUR MODULE
------------------------------------

The `example` directory contains a skeleton application test harness that can be 
used for testing and providing an example of usage to the users of your module.


BUILDING YOUR MODULE
--------------------

Simply run `build.py` which creates your distribution.


INSTALL YOUR MODULE
-------------------

Mac OS X
--------
Copy the distribution zip file into the `/Library/Application Support/Titanium` folder

Linux
-----
Copy the distribution zip file into the `~/.titanium` folder

Windows
-------
Copy the distribution zip file into the `C:\ProgramData\Titanium` folder


REGISTER YOUR MODULE
--------------------

Register your module with your application by editing `tiapp.xml` and adding your module.
Example:

<modules>
	<module version="0.1">__MODULE_ID__</module>
</modules>

When you run your project, the compiler will combine your module along with its dependencies
and assets into the application.


USING YOUR MODULE IN CODE
-------------------------

To use your module in code, you will need to require it. 

For example,

	var my_module = require('__MODULE_ID__');
	my_module.foo();


TESTING YOUR MODULE
-------------------

Run the `titanium.py` script to test your module.
To test with the script, execute:

	titanium run --dir=YOURMODULEDIR

This will execute the app.js in the example folder as a Titanium application.


DISTRIBUTING YOUR MODULE
-------------------------

You can choose to manually distribute your module distribution zip file or through the Titanium Marketplace!


Cheers!
